package adapter

import (
	"encoding/hex"
	"encoding/json"
	"testing"

	bcore "github.com/ethereum/go-ethereum/consensus/bihs/core"
	ocommon "github.com/ontio/ontology/common"
)

func TestEncoding(t *testing.T) {
	// init
	{
		bcore.DefaultBlockFunc = DefaultBlock
	}

	{
		var bihsMsg bcore.Msg
		bytes, err := hex.DecodeString("0102000000000000000100000000000000000101fd1402f90211f9020ca0b6a7e35ed580a6cb6d236a834ee588f68da29de44ad62ff250090dded3002d86a01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347940000000000000000000000000000000000000000a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421bb7608084605c499d98d783010a10846765746886676f312e31378664617277696ea0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff880000000000000000c0c00041ed584c2c3a6a2098410e956025c40ed8d378fd3486d32075c7b9b68a795a7ab35107076a56b93d193c8a37289b83b08f256c976133ac28dbe41474a9cfb8884300")
		if err != nil {
			t.Fatal("hex.DecodeString failed", err)
		}
		err = bihsMsg.Deserialize(ocommon.NewZeroCopySource(bytes))
		if err != nil {
			t.Fatal("bihsMsg.Deserialize failed", err)
		}
	}

	{
		var bihsMsg bcore.Msg
		jsonBytes, err := hex.DecodeString("7b2254797065223a332c22486569676874223a312c2256696577223a312c224a757374696679223a7b2254797065223a322c22486569676874223a312c2256696577223a312c22426c6f636b48617368223a224533676264344f4b48507942776c436363484639724771704c7a594b3436444a586a4a614c43566c754a673d222c2253696773223a226439325a75335236376637345334317165537463652b6f5a66364a7155756d646964576748356c617961344177474f64496453497154666c71387a5443417679702f657932307a6c736c3148757655356c33536b785144556130536c4a4d3961757a37687972594e55726e6c594a6b6466772f39414a745348796d476330636d37794d6851774a42456d4a366b6330476648692f6e445a347449796d6e6b306f6d7343437975634f6a2f6a7041413d3d222c224269746d6170223a6e756c6c7d2c224e6f6465223a6e756c6c2c224944223a6e756c6c2c225061727469616c536967223a225465717149386f766f61544e4950444f6f536b6b4f48774d39467a41634753496e5753524745437a353270333533532f664262394368635978502f51644f596e476d3268564f6e682b74316f7068656a394d57456951453d227d")
		if err != nil {
			t.Fatal("hex.DecodeString failed", err)
		}
		bihsMsg.Node = &bcore.BlockOrHash{}
		bihsMsg.Node.Blk = DefaultBlock()
		err = json.Unmarshal(jsonBytes, &bihsMsg)
		if err != nil {
			t.Fatal("json.Unmarshal failed", err)
		}

		sink := ocommon.NewZeroCopySink(nil)
		bihsMsg.Serialize(sink)
		payload := sink.Bytes()

		var decodedMsg bcore.Msg
		if err = decodedMsg.Deserialize(ocommon.NewZeroCopySource(payload)); err != nil {
			t.Fatal("decodedMsg.Deserialize failed", err)
		}
	}

}
